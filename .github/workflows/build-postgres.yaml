name: build postgres on multiple platforms
run-name: ${{ github.actor }} is building postgres ðŸš€
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "postgres tag to build in the format REL_<MAJOR>_<MINOR>"
        required: true
        default: REL_16_2
jobs:
  build-osx:
    runs-on: macos-latest
    steps:
      - name: Check out postgres code
        uses: actions/checkout@v4
        with:
          repository: postgres/postgres
          ref: refs/tags/${{ github.event.inputs.version }}
          fetch-tags: true
      - run: curl https://raw.githubusercontent.com/eitco/build-postgres/${{ github.ref_name }}/build.sh  > build.sh && chmod +x build.sh
      - run: ./build.sh "${{ github.event.inputs.version }}" osx
      - uses: ncipollo/release-action@v1.14.0
        with:
          name: "postgres-${{ github.event.inputs.version }}-osx"
          body: "postgres ${{ github.event.inputs.version }} osx"
          artifacts: "postgres-${{ github.event.inputs.version }}-osx.tar.gz"
          tag: ${{ github.event.inputs.version }}-osx
          commit: ${{ github.ref_name }}
  build-linux-64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out postgres code
        uses: actions/checkout@v4
        with:
          repository: postgres/postgres
          ref: refs/tags/${{ github.event.inputs.version }}
          fetch-tags: true
      - run: curl https://raw.githubusercontent.com/eitco/build-postgres/${{ github.ref_name }}/build.sh  > build.sh && chmod +x build.sh
      - run: ./build.sh "${{ github.event.inputs.version }}" linux-64
      - uses: ncipollo/release-action@v1.14.0
        with:
          name: "postgres-${{ github.event.inputs.version }}-linux-64"
          body: "postgres ${{ github.event.inputs.version }} linux-64"
          artifacts: "postgres-*-linux-64.tar.gz"
          tag: ${{ github.event.inputs.version }}-linux-64
          commit: ${{ github.ref_name }}
